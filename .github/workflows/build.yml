name: Explore • Web & Pages

on:
  push:
    branches: [main]
    tags:     ["v*"]
  pull_request:
    branches: [main]

env:
  GODOT_VERSION:  "4.4.1-stable"                         # dash format
  GODOT_BASE_URL: "https://github.com/godotengine/godot/releases/download"
  WEB_PRESET:     "Web"

jobs:
  build-web:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with: { submodules: recursive }

    - name: Cache Godot ${{ env.GODOT_VERSION }}
      id: godot-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/godot
          ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION/-/. }}
        key: godot-${{ runner.os }}-${{ env.GODOT_VERSION }}-v3   # bumped

    - name: Install Godot desktop + templates
      if: steps.godot-cache.outputs.cache-hit != 'true'
      run: |
        base="${GODOT_BASE_URL}/${GODOT_VERSION}"

        # Editor
        BIN_URL=${base}/Godot_v${GODOT_VERSION}_linux.x86_64.zip
        echo "⬇️  $BIN_URL"
        wget -q $BIN_URL -O godot.zip
        unzip -q godot.zip -d ~/godot
        chmod +x ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64

        # Templates
        TPL_URL=${base}/Godot_v${GODOT_VERSION}_export_templates.tpz
        echo "⬇️  $TPL_URL"
        wget -q $TPL_URL -O templates.tpz
        TPL_DIR=~/.local/share/godot/export_templates/${GODOT_VERSION}
        mkdir -p $TPL_DIR
        unzip -q templates.tpz -d /tmp/tpl_unzip
        mv /tmp/tpl_unzip/templates/* $TPL_DIR

        # Godot expects dot-separated folder; copy there too
        DOT_DIR=~/.local/share/godot/export_templates/${GODOT_VERSION/-/.}
        mkdir -p "$DOT_DIR"
        cp -r $TPL_DIR/* "$DOT_DIR"

    - name: Export HTML5
      run: |
        ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64 --headless \
          --export-release "${{ env.WEB_PRESET }}" \
          build/web/index.html

    - uses: actions/upload-artifact@v4
      with:
        name: html5-build
        path: build/web

    - name: Show Pages URL
      run: |
        OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
        REPO=$(echo "$GITHUB_REPOSITORY"  | cut -d'/' -f2)
        URL="https://${OWNER}.github.io/${REPO}/"
        echo "::notice title=Play URL::$URL"

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || startsWith(github.ref,'refs/tags/')
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web
        keep_history: true
