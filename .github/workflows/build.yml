name: Explore ‚Ä¢ Web & Pages

on:
  push:
    branches: [main]
    tags:     ["v*"]
  pull_request:
    branches: [main]

env:
  GODOT_VERSION:  "4.4.1-stable"
  GODOT_BASE_URL: "https://github.com/godotengine/godot/releases/download"
  WEB_PRESET:     "Web"

jobs:
  build-web:
    runs-on: ubuntu-latest

    steps:
    # 1 ‚îÄ Checkout repo (with submodules)
    - uses: actions/checkout@v4
      with: { submodules: recursive }

    # 2 ‚îÄ Cache Godot binary + templates
    - name: Cache Godot ${{ env.GODOT_VERSION }}
      id: godot-cache
      uses: actions/cache@v4
      with:
        path: |
          ~/godot
          ~/.local/share/godot/export_templates/${{ env.GODOT_VERSION }}
        key: godot-${{ runner.os }}-${{ env.GODOT_VERSION }}

    # 3 ‚îÄ Download if cache missed
    - name: Install Godot desktop + templates
      run: |
        base="${GODOT_BASE_URL}/${GODOT_VERSION}"

        # ‚îÄ‚îÄ‚îÄ editor ‚îÄ‚îÄ‚îÄ
        BIN_URL=${base}/Godot_v${GODOT_VERSION}_linux.x86_64.zip
        echo "‚¨áÔ∏è  $BIN_URL"
        wget -q $BIN_URL -O godot.zip
        unzip -q godot.zip -d ~/godot
        chmod +x ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64

        # ‚îÄ‚îÄ‚îÄ export templates ‚îÄ‚îÄ‚îÄ
        TPL_URL=${base}/Godot_v${GODOT_VERSION}_export_templates.tpz
        echo "‚¨áÔ∏è  $TPL_URL"
        wget -q $TPL_URL -O templates.tpz

        TPL_DIR=~/.local/share/godot/export_templates/${GODOT_VERSION}
        mkdir -p $TPL_DIR
        # unzip directly into the version folder (strip leading "templates/")
        unzip -q templates.tpz -d /tmp/tpl_unzip
        mv /tmp/tpl_unzip/templates/* $TPL_DIR

        cd $TPL_DIR
        if [ -f web_debug.zip ]; then
        echo "Copying web_nothreads templates... $TPL_DIR"
        cp web_debug.zip        web_nothreads_debug.zip
        cp web_release.zip      web_nothreads_release.zip
        fi

    # 4 ‚îÄ Export HTML5
    - name: Export HTML5
      run: |
        ~/godot/Godot_v${GODOT_VERSION}_linux.x86_64 --headless \
          --export-release "${{ env.WEB_PRESET }}" build/web/index.html

    # 5 ‚îÄ Upload artifact
    - uses: actions/upload-artifact@v4
      with:
        name: html5-build
        path: build/web

    # 6 ‚îÄ Show final site URL
    - name: Show Pages URL
      run: |
        OWNER=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f1)
        REPO=$(echo "$GITHUB_REPOSITORY"  | cut -d'/' -f2)
        URL="https://${OWNER}.github.io/${REPO}/"
        echo "::notice title=Play URL::$URL"
        echo "üîó Game URL: $URL"

    # 7 ‚îÄ Deploy on main or tags
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web
        keep_history: true
