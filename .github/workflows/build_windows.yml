# .github/workflows/build_windows.yml
name: Build & Release – Windows

on:
  push:
    branches: [main]      # nightly builds
    tags:     ["v*"]      # versioned releases (v1.2.3)

env:
  GODOT_VER: 4.4.1-stable          # bump when you upgrade Godot
  PRESET:    "Windows Desktop"     # export preset name

jobs:
#───────────────────────────────────────────────────────────────────────────────
  win-build:
    runs-on: windows-latest

    steps:
    # 1️⃣  Checkout ­­──────────────────────────────────────────────────────────
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    # 2️⃣  Restore / populate Godot cache ­­────────────────────────────────────
    - name: Restore Godot cache
      id: godot-cache
      uses: actions/cache/restore@v4
      with:
        path: |
          C:\godot
          ${{ env.USERPROFILE }}\AppData\Roaming\Godot\export_templates
        key: godot-win-${{ env.GODOT_VER }}-v3      # <- bump if logic changes

    - name: Install Godot editor + templates
      if: steps.godot-cache.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        $ErrorActionPreference = "Stop"
        $base = "https://github.com/godotengine/godot/releases/download/${env:GODOT_VER}"

        # ▸ Editor ----------------------------------------------------------------
        Invoke-WebRequest "$base/Godot_v${env:GODOT_VER}_win64.exe.zip" -OutFile godot.zip
        Expand-Archive godot.zip -DestinationPath C:\godot

        # ▸ Export templates -------------------------------------------------------
        Invoke-WebRequest "$base/Godot_v${env:GODOT_VER}_export_templates.tpz" -OutFile tpl.tpz
        $tempTplDir = "C:\temp_tpl"
        New-Item -ItemType Directory -Force -Path $tempTplDir | Out-Null
        Expand-Archive tpl.tpz -DestinationPath $tempTplDir

        $tplParent = "$env:APPDATA\Godot\export_templates"
        $dashDir   = Join-Path $tplParent $env:GODOT_VER             # 4.4.1-stable
        $dotDir    = Join-Path $tplParent ($env:GODOT_VER -replace '-', '.')  # 4.4.1.stable

        # copy raw templates (Godot puts them in a 'windows' sub-dir)
        New-Item -ItemType Directory -Force -Path $dashDir | Out-Null
        Copy-Item "$tempTplDir\templates\*" $dashDir -Recurse -Force

        # ── normalise ──────────────────────────────────────────────────────────
        if (Test-Path $dashDir -and -not (Test-Path $dotDir)) {
          Move-Item $dashDir $dotDir
        }
        $nested = Join-Path $dotDir 'windows'
        if (Test-Path $nested) { Copy-Item "$nested\*" $dotDir -Recurse -Force }

        $pairs = @(
          @{ short='windows_debug.exe'   ; long='windows_debug_x86_64.exe'   },
          @{ short='windows_release.exe' ; long='windows_release_x86_64.exe' }
        )
        foreach ($p in $pairs) {
          $src = Join-Path $dotDir $p.short
          $dst = Join-Path $dotDir $p.long
          if (Test-Path $src -and -not (Test-Path $dst)) { Copy-Item $src $dst }
        }

    - name: Save Godot cache
      if: steps.godot-cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: |
          C:\godot
          ${{ env.USERPROFILE }}\AppData\Roaming\Godot\export_templates
        key: ${{ steps.godot-cache.outputs.cache-primary-key }}

    # 3️⃣  rcedit helper ­­──────────────────────────────────────────────────────
    - name: Install rcedit
      run: choco install rcedit --yes

    - name: Tell Godot where rcedit.exe is
      shell: pwsh
      run: |
        $rcedit = (Get-Command rcedit).Source
        & "C:\godot\Godot_v${env:GODOT_VER}_win64.exe" `
            --headless --quit `
            --set editor/export/windows/rcedit "$rcedit"

    # 4️⃣  Export ­­─────────────────────────────────────────────────────────────
    - name: Export Windows build
      shell: pwsh
      run: |
        mkdir -Force build\windows
        & "C:\godot\Godot_v${env:GODOT_VER}_win64.exe" `
          --headless --verbose `
          --export-release "${env:PRESET}" "build/w
