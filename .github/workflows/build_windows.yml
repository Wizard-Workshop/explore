# .github/workflows/windows_build.yml
name: Build - Windows

on:
  push:    { branches: [main], tags: ["v*"] }

env:
  GODOT_VER: 4.4.1-stable          # bump when you upgrade
  PRESET:    "Windows Desktop"     # export preset name

jobs:
  win-build:
    runs-on: windows-latest

    steps:
    # ── Checkout ──────────────────────────────────────────────────────────────
    - uses: actions/checkout@v4
      with: { submodules: recursive }

    # ── Cache the Godot editor + export templates ─────────────────────────────
    - uses: actions/cache@v4
      id: godot-cache
      with:
        path: |
          C:\godot
          ${{ env.USERPROFILE }}\AppData\Roaming\Godot\export_templates
        key: godot-win-${{ env.GODOT_VER }}-v1

    # ── Install Godot editor + templates (only if cache missed) ───────────────
    - name: Install Godot editor + templates
      if: steps.godot-cache.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        $base = "https://github.com/godotengine/godot/releases/download/${env:GODOT_VER}"

        # ▸ Editor (C:\godot\Godot_vX.exe)
        Invoke-WebRequest "$base/Godot_v${env:GODOT_VER}_win64.exe.zip" -OutFile godot.zip
        Expand-Archive godot.zip -DestinationPath C:\godot

        # ▸ Export templates (%APPDATA%\Godot\export_templates\<version>\…)
        Invoke-WebRequest "$base/Godot_v${env:GODOT_VER}_export_templates.tpz" -OutFile tpl.tpz
        $tempTplDir = "C:\temp_tpl"
        New-Item -ItemType Directory -Force -Path $tempTplDir | Out-Null
        Expand-Archive tpl.tpz -DestinationPath $tempTplDir
        echo "--- Contents of temporary template directory ($tempTplDir) ---"
        ls -Recurse $tempTplDir

        $tplDir = "$env:APPDATA\Godot\export_templates\4.4.1.stable"
        New-Item -ItemType Directory -Force -Path $tplDir | Out-Null
        Copy-Item -Path "$tempTplDir\templates\*" -Destination $tplDir -Recurse -Force
        echo "--- Contents of final template directory ($tplDir) ---"
        ls -Recurse $tplDir

    # ── rcedit helper (Chocolatey + head-less editor-setting write) ────────────
    - name: Install rcedit
      run: choco install rcedit --yes


    # ── Export the Windows build (logs streamed & saved) ──────────────────────
    - name: Export Windows Desktop
      shell: pwsh
      run: |
        mkdir -Force build\windows

        $rcedit = (Get-Command rcedit).Source
        & "C:\godot\Godot_v${env:GODOT_VER}_win64.exe" `
          --headless `
          --set editor/export/windows/rcedit "$rcedit" `
          --verbose `
          --export-release-template "$env:APPDATA\Godot\export_templates\4.4.1.stable\windows_release_x86_64.exe" `
          "${env:PRESET}" "build/windows/Explore.exe" `
          2>&1 | Tee-Object -FilePath godot_export.log

        $exit = $LASTEXITCODE
        Get-Content godot_export.log            # show log in the Action view

        if ($exit -ne 0) {
          Write-Error "❌ Godot export failed (exit $exit)"
          exit $exit
        }
        if (-not (Test-Path "build/windows/Explore.exe")) {
          Write-Error "❌ Godot did not produce Explore.exe"
          exit 1
        }

    # ── Upload artefact ───────────────────────────────────────────────────────
    - uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: build/windows/Explore.exe
